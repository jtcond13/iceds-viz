code = ifelse(x=="C2114",45,75)
df_15 <- blsQCEW('Area', year='2015', quarter = '2', area = x)
df_15 <- filter(df_15, agglvl_code == code) %>%
select(area_fips, industry_code, year, qtr, qtrly_estabs, month1_emplvl)
df_18 <- blsQCEW('Area', year='2018', quarter = '2', area = x)
df_18 <-  filter(df_18, agglvl_code == code) %>%
select(area_fips, industry_code, year, qtr, qtrly_estabs, month1_emplvl)
out <- rbind.data.frame(df_15, df_18)
out <- left_join(out, naics_codes, by = c("industry_code"= "code")) %>%
select(-qtr) %>% filter(industry_code < 900)
out_15 <- out %>% filter(year == 2015)
out_18 <- out %>% filter(year == 2018)
out_cmb <- inner_join(tmp_15, tmp_18, by=c("area_fips","industry_code","title"))
out_cmb %<>% select(-year.x, -year.y)
names(out_cmb)[3:4] <- c("2015_Establishments","Fifteen_Employment")
names(out_cmb)[6:7] <- c("2018_Establishments", "Eighteen_Employment")
out_cmb <- out_cmb[,c(1:2,5,3:4,6:7)]
out_cmb <- distinct(out_cmb, area_fips, industry_code, .keep_all=T)
Sys.sleep(3)
return(out_cmb)
})
df[[2]]$area_fips %>% unique()
df[[5]]$area_fips %>% unique()
library(blsAPI)
naics_codes$code %<>% as.factor()
areas <- unique(combined_q2$fips_code)
df <- map(areas, function(x){
print(x)
code = ifelse(x=="C2114",45,75)
df_15 <- blsQCEW('Area', year='2015', quarter = '2', area = x)
df_15 <- filter(df_15, agglvl_code == code) %>%
select(area_fips, industry_code, year, qtr, qtrly_estabs, month1_emplvl)
print(unique(df_15$area_fips))
df_18 <- blsQCEW('Area', year='2018', quarter = '2', area = x)
df_18 <-  filter(df_18, agglvl_code == code) %>%
select(area_fips, industry_code, year, qtr, qtrly_estabs, month1_emplvl)
print(unique(df_18$area_fips))
out <- rbind.data.frame(df_15, df_18)
out <- left_join(out, naics_codes, by = c("industry_code"= "code")) %>%
select(-qtr) %>% filter(industry_code < 900)
out_15 <- out %>% filter(year == 2015)
out_18 <- out %>% filter(year == 2018)
out_cmb <- inner_join(tmp_15, tmp_18, by=c("area_fips","industry_code","title"))
out_cmb %<>% select(-year.x, -year.y)
names(out_cmb)[3:4] <- c("2015_Establishments","Fifteen_Employment")
names(out_cmb)[6:7] <- c("2018_Establishments", "Eighteen_Employment")
out_cmb <- out_cmb[,c(1:2,5,3:4,6:7)]
out_cmb <- distinct(out_cmb, area_fips, industry_code, .keep_all=T)
Sys.sleep(3)
return(out_cmb)
})
View(naics_codes)
library(blsAPI)
naics_codes$code %<>% as.factor()
areas <- unique(combined_q2$fips_code)
df <- map(areas, function(x){
code = ifelse(x=="C2114",45,75)
df_15 <- blsQCEW('Area', year='2015', quarter = '2', area = x)
df_15 <- filter(df_15, agglvl_code == code) %>%
select(area_fips, industry_code, year, qtr, qtrly_estabs, month1_emplvl)
df_18 <- blsQCEW('Area', year='2018', quarter = '2', area = x)
df_18 <-  filter(df_18, agglvl_code == code) %>%
select(area_fips, industry_code, year, qtr, qtrly_estabs, month1_emplvl)
out <- rbind.data.frame(df_15, df_18)
out <- left_join(out, naics_codes, by = c("industry_code"= "code")) %>%
select(-qtr) %>% filter(industry_code < 900)
out_15 <- out %>% filter(year == 2015)
out_18 <- out %>% filter(year == 2018)
out_cmb <- inner_join(out_15, out_18, by=c("area_fips","industry_code","title"))
out_cmb %<>% select(-year.x, -year.y)
names(out_cmb)[3:4] <- c("2015_Establishments","Fifteen_Employment")
names(out_cmb)[6:7] <- c("2018_Establishments", "Eighteen_Employment")
out_cmb <- out_cmb[,c(1:2,5,3:4,6:7)]
out_cmb <- distinct(out_cmb, area_fips, industry_code, .keep_all=T)
return(out_cmb)
}) %>% bind_rows()
library(blsAPI)
naics_codes$code %<>% as.factor()
areas <- unique(combined_q2$fips_code)
df <- map(areas, function(x){
code = ifelse(x=="C2114",45,75)
df_15 <- blsQCEW('Area', year='2015', quarter = '2', area = x)
df_15 <- filter(df_15, agglvl_code == code) %>%
select(area_fips, industry_code, year, qtr, qtrly_estabs, month1_emplvl)
df_18 <- blsQCEW('Area', year='2018', quarter = '2', area = x)
df_18 <-  filter(df_18, agglvl_code == code) %>%
select(area_fips, industry_code, year, qtr, qtrly_estabs, month1_emplvl)
out <- rbind.data.frame(df_15, df_18)
out$area_fips %<>% as.character
out <- left_join(out, naics_codes, by = c("industry_code"= "code")) %>%
select(-qtr) %>% filter(industry_code < 900)
out_15 <- out %>% filter(year == 2015)
out_18 <- out %>% filter(year == 2018)
out_cmb <- inner_join(out_15, out_18, by=c("area_fips","industry_code","title"))
out_cmb %<>% select(-year.x, -year.y)
names(out_cmb)[3:4] <- c("2015_Establishments","Fifteen_Employment")
names(out_cmb)[6:7] <- c("2018_Establishments", "Eighteen_Employment")
out_cmb <- out_cmb[,c(1:2,5,3:4,6:7)]
out_cmb <- distinct(out_cmb, area_fips, industry_code, .keep_all=T)
return(out_cmb)
}) %>% bind_rows()
df$growth <- df$Eighteen_Employment - df$Fifteen_Employment
df %<>% filter(!is.nan(growth))
df %<>% arrange(area_fips, desc(growth))
View(df)
rm(tmp_1, tmp_15, tmp_15_2, tmp_18)
rm(tmp_cmb)
View(q2_comparison)
View(three_digit)
View(three_digit)
str(three_digit)
library(blsAPI)
naics_codes$code %<>% as.factor()
areas <- unique(combined_q2$fips_code)
df <- map(areas, function(x){
code = ifelse(x=="C2114",45,75)
df_15 <- blsQCEW('Area', year='2015', quarter = '2', area = x)
df_15 <- filter(df_15, agglvl_code == code) %>%
select(area_fips, industry_code, year, qtr, qtrly_estabs, month1_emplvl)
df_18 <- blsQCEW('Area', year='2018', quarter = '2', area = x)
df_18 <-  filter(df_18, agglvl_code == code) %>%
select(area_fips, industry_code, year, qtr, qtrly_estabs, month1_emplvl)
out <- rbind.data.frame(df_15, df_18)
out$area_fips %<>% as.character
out <- left_join(out, three_digit, by = c("industry_code"= "code")) %>%
select(-qtr) %>% filter(industry_code < 900)
out_15 <- out %>% filter(year == 2015)
out_18 <- out %>% filter(year == 2018)
out_cmb <- inner_join(out_15, out_18, by=c("area_fips","industry_code","title"))
out_cmb %<>% select(-year.x, -year.y)
names(out_cmb)[3:4] <- c("2015_Establishments","Fifteen_Employment")
names(out_cmb)[6:7] <- c("2018_Establishments", "Eighteen_Employment")
out_cmb <- out_cmb[,c(1:2,5,3:4,6:7)]
out_cmb <- distinct(out_cmb, area_fips, industry_code, .keep_all=T)
return(out_cmb)
}) %>% bind_rows()
library(blsAPI)
naics_codes$code %<>% as.factor()
areas <- unique(combined_q2$fips_code)
df <- map(areas, function(x){
code = ifelse(x=="C2114",45,75)
df_15 <- blsQCEW('Area', year='2015', quarter = '2', area = x)
df_15 <- filter(df_15, agglvl_code == code) %>%
select(area_fips, industry_code, year, qtr, qtrly_estabs, month1_emplvl)
df_18 <- blsQCEW('Area', year='2018', quarter = '2', area = x)
df_18 <-  filter(df_18, agglvl_code == code) %>%
select(area_fips, industry_code, year, qtr, qtrly_estabs, month1_emplvl)
out <- rbind.data.frame(df_15, df_18)
out$industry_code %<>% as.integer()
out$area_fips %<>% as.character
out <- left_join(out, three_digit, by = c("industry_code"= "code")) %>%
select(-qtr) %>% filter(industry_code < 900)
out_15 <- out %>% filter(year == 2015)
out_18 <- out %>% filter(year == 2018)
out_cmb <- inner_join(out_15, out_18, by=c("area_fips","industry_code","title"))
out_cmb %<>% select(-year.x, -year.y)
names(out_cmb)[3:4] <- c("2015_Establishments","Fifteen_Employment")
names(out_cmb)[6:7] <- c("2018_Establishments", "Eighteen_Employment")
out_cmb <- out_cmb[,c(1:2,5,3:4,6:7)]
out_cmb <- distinct(out_cmb, area_fips, industry_code, .keep_all=T)
return(out_cmb)
}) %>% bind_rows()
df$growth <- df$Eighteen_Employment - df$Fifteen_Employment
df %<>% filter(!is.nan(growth))
df %<>% arrange(area_fips, desc(growth))
View(df)
library(blsAPI)
naics_codes$code %<>% as.factor()
areas <- unique(combined_q2$fips_code)
df <- map(areas, function(x){
code = ifelse(x=="C2114",45,75)
df_15 <- blsQCEW('Area', year='2015', quarter = '2', area = x)
df_15 <- filter(df_15, agglvl_code == code) %>%
select(area_fips, industry_code, year, qtr, qtrly_estabs, month1_emplvl)
df_18 <- blsQCEW('Area', year='2018', quarter = '2', area = x)
df_18 <-  filter(df_18, agglvl_code == code) %>%
select(area_fips, industry_code, year, qtr, qtrly_estabs, month1_emplvl)
out <- rbind.data.frame(df_15, df_18)
three_digit$code %<>% as.factor()
out$area_fips %<>% as.character
out <- left_join(out, three_digit, by = c("industry_code"= "code")) %>%
select(-qtr) %>% filter(industry_code < 900)
out_15 <- out %>% filter(year == 2015)
out_18 <- out %>% filter(year == 2018)
out_cmb <- inner_join(out_15, out_18, by=c("area_fips","industry_code","title"))
out_cmb %<>% select(-year.x, -year.y)
names(out_cmb)[3:4] <- c("2015_Establishments","Fifteen_Employment")
names(out_cmb)[6:7] <- c("2018_Establishments", "Eighteen_Employment")
out_cmb <- out_cmb[,c(1:2,5,3:4,6:7)]
out_cmb <- distinct(out_cmb, area_fips, industry_code, .keep_all=T)
return(out_cmb)
}) %>% bind_rows()
df$growth <- df$Eighteen_Employment - df$Fifteen_Employment
df %<>% filter(!is.nan(growth))
df %<>% arrange(area_fips, desc(growth))
View(df)
View(q2_comparison)
View(icc_detail)
View(bls_q2)
county_lookup <- distinct(bls_q2, area_fips, county)
View(county_lookup)
str(county_lookup)
str(df)
df %<>% inner_join(county_lookup)
View(df)
?abs()
library(blsAPI)
naics_codes$code %<>% as.factor()
areas <- unique(combined_q2$fips_code)
df <- map(areas, function(x){
code = ifelse(x=="C2114",45,75)
df_15 <- blsQCEW('Area', year='2015', quarter = '2', area = x)
df_15 <- filter(df_15, agglvl_code == code) %>%
select(area_fips, industry_code, year, qtr, qtrly_estabs, month1_emplvl)
df_18 <- blsQCEW('Area', year='2018', quarter = '2', area = x)
df_18 <-  filter(df_18, agglvl_code == code) %>%
select(area_fips, industry_code, year, qtr, qtrly_estabs, month1_emplvl)
out <- rbind.data.frame(df_15, df_18)
three_digit$code %<>% as.factor()
out$area_fips %<>% as.character
out <- left_join(out, three_digit, by = c("industry_code"= "code")) %>%
select(-qtr) %>% filter(industry_code < 900)
out_15 <- out %>% filter(year == 2015)
out_18 <- out %>% filter(year == 2018)
out_cmb <- inner_join(out_15, out_18, by=c("area_fips","industry_code","title"))
out_cmb %<>% select(-year.x, -year.y)
names(out_cmb)[3:4] <- c("2015_Establishments","Fifteen_Employment")
names(out_cmb)[6:7] <- c("2018_Establishments", "Eighteen_Employment")
out_cmb <- out_cmb[,c(1:2,5,3:4,6:7)]
out_cmb <- distinct(out_cmb, area_fips, industry_code, .keep_all=T)
return(out_cmb)
}) %>% bind_rows()
df$job_growth <- df$Eighteen_Employment - df$Fifteen_Employment
df %<>% filter(!is.nan(growth))
View(df)
df %<>% filter(!is.nan(job_growth))
df %<>% arrange(area_fips, desc(growth))
df %<>% arrange(area_fips, desc(jon_growth))
df %<>% arrange(area_fips, desc(job_growth))
county_lookup <- distinct(bls_q2, area_fips, county)
df %<>% inner_join(county_lookup)
View(df)
View(q2_comparison)
both_analyses <- left_join(df, q2_comparison)
View(both_analyses)
names(df)[3] <- "category"
both_analyses <- left_join(df, q2_comparison)
View(both_analyses)
rm(both_analyses)
View(df)
df %<>% mutate(region = ifelse(county %in% c("St. Joseph", "Elkhart"), county, "Three Counties"))
write_csv(df, "job_growth.csv")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readxl)
library(magrittr)
setwd('~/Documents/WorkOne/')
naics_codes <- read_excel("bls/2017_NAICS_Structure.xlsx")
naics_codes <- naics_codes[2:nrow(naics_codes),2:3]
names(naics_codes) <- c('code','title')
naics_codes <- naics_codes[2:nrow(naics_codes),] %>% filter(!is.na(.$title))
naics_codes$title %<>% gsub('T$', '', .)
setwd(paste0(getwd(),"/bls/naics_detail"))
files_to_read <- list.files(getwd())
bls_detail <- map(files_to_read, function(x){
y <- read_csv(x)
if(x == "2018.q1-q2 C2114 Elkhart-Goshen, IN MSA.csv"){
z <- filter(y, agglvl_code == 45)
}
else{
z <- filter(y, agglvl_code == 75)
z$area_fips <- as.character(z$area_fips)
}
z <- filter(z, own_title == 'Private')
}) %>% bind_rows()
bls_detail %<>% select(area_fips, area_title, industry_code, year, qtr,
industry_title, qtrly_estabs_count, month1_emplvl, avg_wkly_wage)
bls_detail$industry_code %<>% as.integer()
bls_detail$county <- str_extract(bls_detail$area_title, '(^.*(?=\\sCounty)|Elkhart)')
bls_detail %<>% select(-area_title)
my_dir <- '/Users/jackcondon/Documents/WorkOne/icc/county_level/'
files_to_read <- list.files(my_dir)
setwd(my_dir)
icc_detail <-map(files_to_read, function(x){
y <- read_csv(x)
names(y) <- c('naics_code','industry_title','orders','openings','referrals')
w <- filter(y, naics_code != 'NAICS Industry Code' & naics_code != 'Report Totals')
z <- w[complete.cases(w$naics_code),]
z$naics_code <- as.integer(z$naics_code)
z$county <- str_extract(x, '(?<=Q1Q2\\s).*(?=by)')
z$county <- gsub('\\s$', '', z$county)
z$county <- str_replace_all(z$county, 'St\\s', 'St. ')
return(z)
}) %>% bind_rows() %>% filter(!is.na(industry_title))
icc_detail$naics_code <- ifelse(icc_detail$naics_code < 100, icc_detail$naics_code * 10 + 1, icc_detail$naics_code)
icc_detail$naics_code %<>% as.character()
icc_detail$naics_code <- substr(icc_detail$naics_code,1,3)
icc_detail$naics_code %<>% as.integer()
icc_detail[,c('orders','openings','referrals')] %<>% modify(., as.integer)
icc_detail %<>% select(-industry_title) %>% group_by(naics_code, county) %>% summarise(orders = sum(orders), openings = sum(openings), referrals = sum(referrals))
icc_detail$naics_code %<>% as.integer()
bls_q2 <- filter(bls_detail, qtr == 2)
# Figure out where the join is failing
combined_q2 <- full_join(bls_q2, icc_detail, by=c("industry_code"="naics_code", "county"="county"))
# combined_q2 %<>% select(-industry_title.y)
names(combined_q2) <- c('fips_code','industry_code','year','qtr','industry_name', 'number_of_businesses','employment','avg_wkly_wage','county','work_one_orders','work_one_openings', 'work_one_referrals')
combined_q2 %<>% select(-industry_name)
naics_codes$code %<>% as.integer()
three_digit <- naics_codes %>% filter(code > 100 & code < 1000)
combined_q2 <- left_join(combined_q2, three_digit, by=c("industry_code" = "code"))
combined_q2 %<>% distinct() %>% filter(!is.na(title))
names(combined_q2)[12] <- "category"
# Remove public sector
combined_q2 %<>% filter(!is.na(fips_code))
combined_q2[,c('work_one_orders','work_one_openings','work_one_referrals')] %<>% lapply(., function(x){
return(ifelse(is.na(x), 0, x))
})
counties <- unique(combined_q2$county)
q2_comparison <- map(counties, function(x){
y <- filter(combined_q2, county == x)
w <- y %>% mutate(emp_pct = round(employment / sum(employment),3)*100,                                            wo_pct = round(work_one_openings / sum(work_one_openings),3) * 100)
w <- arrange(w, desc(emp_pct, wo_pct))
w <- select(w, county, category, emp_pct, wo_pct)
w$gap <- w$wo_pct - w$emp_pct
fin <- top_n(w, 15, gap)
return(w)
}) %>% bind_rows() %>% filter(emp_pct > 0)
library(blsAPI)
naics_codes$code %<>% as.factor()
areas <- unique(combined_q2$fips_code)
df <- map(areas, function(x){
code = ifelse(x=="C2114",45,75)
df_15 <- blsQCEW('Area', year='2015', quarter = '2', area = x)
df_15 <- filter(df_15, agglvl_code == code) %>%
select(area_fips, industry_code, year, qtr, qtrly_estabs, month1_emplvl)
df_18 <- blsQCEW('Area', year='2018', quarter = '2', area = x)
df_18 <-  filter(df_18, agglvl_code == code) %>%
select(area_fips, industry_code, year, qtr, qtrly_estabs, month1_emplvl)
out <- rbind.data.frame(df_15, df_18)
three_digit$code %<>% as.factor()
out$area_fips %<>% as.character
out <- left_join(out, three_digit, by = c("industry_code"= "code")) %>%
select(-qtr) %>% filter(industry_code < 900)
out_15 <- out %>% filter(year == 2015)
out_18 <- out %>% filter(year == 2018)
out_cmb <- inner_join(out_15, out_18, by=c("area_fips","industry_code","title"))
out_cmb %<>% select(-year.x, -year.y)
names(out_cmb)[3:4] <- c("2015_Establishments","Fifteen_Employment")
names(out_cmb)[6:7] <- c("2018_Establishments", "Eighteen_Employment")
out_cmb <- out_cmb[,c(1:2,5,3:4,6:7)]
out_cmb <- distinct(out_cmb, area_fips, industry_code, .keep_all=T)
return(out_cmb)
}) %>% bind_rows()
library(blsAPI)
naics_codes$code %<>% as.factor()
areas <- unique(combined_q2$fips_code)
df <- map(areas, function(x){
code = ifelse(x=="C2114",45,75)
df_15 <- blsQCEW('Area', year='2015', quarter = '2', area = x)
df_15 <- filter(df_15, agglvl_code == code) %>%
select(area_fips, industry_code, year, qtr, qtrly_estabs, month1_emplvl)
df_18 <- blsQCEW('Area', year='2018', quarter = '2', area = x)
df_18 <-  filter(df_18, agglvl_code == code) %>%
select(area_fips, industry_code, year, qtr, qtrly_estabs, month1_emplvl)
out <- rbind.data.frame(df_15, df_18)
three_digit$code %<>% as.factor()
out$area_fips %<>% as.character
out <- left_join(out, three_digit, by = c("industry_code"= "code")) %>%
select(-qtr) %>% filter(industry_code < 900)
out_15 <- out %>% filter(year == 2015)
out_18 <- out %>% filter(year == 2018)
out_cmb <- inner_join(out_15, out_18, by=c("area_fips","industry_code","title"))
out_cmb %<>% select(-year.x, -year.y)
names(out_cmb)[3:4] <- c("2015_Establishments","Fifteen_Employment")
names(out_cmb)[6:7] <- c("2018_Establishments", "Eighteen_Employment")
out_cmb <- out_cmb[,c(1:2,5,3:4,6:7)]
out_cmb <- distinct(out_cmb, area_fips, industry_code, .keep_all=T)
return(out_cmb)
}) %>% bind_rows()
df$job_growth <- df$Eighteen_Employment - df$Fifteen_Employment
df %<>% filter(!is.nan(job_growth))
df %<>% arrange(area_fips, desc(job_growth))
county_lookup <- distinct(bls_q2, area_fips, county)
df %<>% inner_join(county_lookup)
names(df)[3] <- "category"
df %<>% mutate(region = ifelse(county %in% c("St. Joseph", "Elkhart"), county, "Three Counties"))
View(df)
View(q2_comparison)
counties <- unique(combined_q2$county)
q2_comparison <- map(counties, function(x){
y <- filter(combined_q2, county == x)
w <- y %>% mutate(emp_pct = round(employment / sum(employment),3)*100,                                            wo_pct = round(work_one_openings / sum(work_one_openings),3) * 100)
w <- arrange(w, desc(emp_pct, wo_pct))
w <- select(w, county, category, emp_pct, wo_pct)
w$gap <- w$emp_pct - w$wo_pct
fin <- top_n(w, 15, gap)
return(w)
}) %>% bind_rows() %>% filter(emp_pct > 0)
View(combined_q2)
counties <- unique(combined_q2$county)
q2_comparison <- map(counties, function(x){
y <- filter(combined_q2, county == x)
w <- y %>% mutate(emp_pct = round(employment / sum(employment),3)*100,                                            wo_pct = round(work_one_openings / sum(work_one_openings),3) * 100)
w <- arrange(w, desc(emp_pct, wo_pct))
w <- select(w, county, category, emp_pct, wo_pct, industry_code)
w$gap <- w$emp_pct - w$wo_pct
fin <- top_n(w, 15, gap)
return(w)
}) %>% bind_rows() %>% filter(emp_pct > 0)
str(q2_comparison)
str(df)
counties <- unique(combined_q2$county)
q2_comparison <- map(counties, function(x){
y <- filter(combined_q2, county == x)
w <- y %>% mutate(emp_pct = round(employment / sum(employment),3)*100,                                            wo_pct = round(work_one_openings / sum(work_one_openings),3) * 100, industry_code = as.character(industry_code))
w <- arrange(w, desc(emp_pct, wo_pct))
w <- select(w, county, category, emp_pct, wo_pct, industry_code)
w$gap <- w$emp_pct - w$wo_pct
fin <- top_n(w, 15, gap)
return(w)
}) %>% bind_rows() %>% filter(emp_pct > 0)
View(q2_comparison)
View(q2_comparison)
str(df)
str(q2_comparison)
district_two <- left_join(df, q2_comparison)
View(district_two)
district_two <- district_two %>% select(industry_code, category, county, region, job_growth, gap)
View(district_two)
str(district_two)
district_two <- district_two %>% select(industry_code, category, county, region, job_growth, gap) %>% mutate(score = job_growth * gap) %>% group_by(region) %>% top_n(n = 15, wt = score)
View(district_two)
district_two <- district_two %>% select(industry_code, category, county, region, job_growth, gap) %>% mutate(score = job_growth/10 * abs(gap)) %>% group_by(region) %>% top_n(n = 15, wt = score)
View(district_two)
?top_n
district_two <- district_two %>% select(industry_code, category, county, region, job_growth, gap) %>% mutate(score = job_growth/10 * abs(gap)) %>% group_by(county) %>% top_n(n = 10)
View(district_two)
district_two <- district_two %>% select(industry_code, category, county, region, job_growth, gap) %>% mutate(score = job_growth/10 * abs(gap)) %>% group_by(county) %>% top_n(n = 10)
View(district_two)
district_two <- left_join(df, q2_comparison)
district_two <- district_two %>% select(industry_code, category, county, region, job_growth, gap)
View(district_two)
district_two <- left_join(df, q2_comparison)
View(district_two)
district_two[,c('emp_pct','wo_pct')] %<>% lapply(., function(x){                                                                      return(ifelse(is.na(x), 0, x)})
district_two[,c('emp_pct','wo_pct')] %<>% lapply(., function(x){                                                                      return(ifelse(is.na(x), 0, x))})
View(district_two)
View(combined_q2)
str(combined_q2$industry_code)
eighteen_combined <- filter(combined_q2, year == 2018) %>% select(industry_code, county, work_one_openings)
View(eighteen_combined)
district_two %<>% left_join(., eighteen_combined)
district_two$industry_code %>% str()
eighteen_combined <- filter(combined_q2, year == 2018) %>% select(industry_code, county, work_one_openings) %>% mutate(industry_code = as.character(industry_code))
district_two %<>% left_join(., eighteen_combined)
View(district_two)
analysis_table <- district_two %>% select(category, county, region, job_growth, work_one_openings)
View(analysis_table)
?scale()
scaled_table <- analysis_table %>% map_if(is.numeric, scale)
scaled_table <- analysis_table %>% map_if(is.numeric, scale) %>% bind_cols()
View(scaled_table)
?fill
scaled_table <- analysis_table %>% map_if(is.numeric, scale) %>% bind_cols() %>% fill()
View(scaled_table)
write_csv(scaled_table, "comparison.csv")
three_counties <- analysis_table %>% filter(region == "Three Counties") %>% map_if(is.numeric, scale) %>% bind_cols()
View(three_counties)
View(analysis_table)
three_counties <- analysis_table %>% filter(region == "Three Counties") %>% group_by(region) %>% summarise_if(is.numeric)
three_counties <- analysis_table %>% filter(region == "Three Counties") %>% group_by(region) %>% summarise_if(is.numeric, funs(sum))
three_counties <- analysis_table %>% filter(region == "Three Counties") %>% group_by(region) #%>% summarise()
View(three_counties)
three_counties <- analysis_table %>% filter(region == "Three Counties") %>% select(-county) %>% group_by(region, category) %>% summarise(job_growth = sum(job_growth), work_one_openings = sum(work_one_openings))
View(three_counties)
three_counties <- analysis_table %>% filter(region == "Three Counties") %>% select(-county) %>% group_by(region, category) %>% summarise(job_growth = sum(job_growth), work_one_openings = sum(work_one_openings)) %>% mutate_if(is.numeric, scale) %>% bind_cols
View(three_counties)
three_counties <- analysis_table %>% filter(region == "Three Counties") %>% select(-county) %>% group_by(region, category) %>% summarise(job_growth = sum(job_growth), work_one_openings = sum(work_one_openings)) %>% mutate_if(is.numeric, scale) %>% bind_cols() %>% mutate(score = job_growth + work_one_openings) %>% top_n(30)
View(three_counties)
three_counties <- analysis_table %>% filter(region == "Three Counties") %>% select(-county) %>% group_by(region, category) %>% summarise(job_growth = sum(job_growth), work_one_openings = sum(work_one_openings)) %>% mutate_if(is.numeric, scale) %>% bind_cols() %>% mutate(score = job_growth + work_one_openings) %>% top_n(30) %>% select(-score)
ggplot(three_counties, aes(x=work_one_openings, y=job_growth)) + geom_point() + theme_minimal()
?theme
ggplot(three_counties, aes(x=work_one_openings, y=job_growth)) + geom_point() + theme_minimal(axis.title.x = "Three Year Job Growth (2015-2018)", axis.title.y = "Work One Openings")
ggplot(three_counties, aes(x=work_one_openings, y=job_growth)) + geom_point() + theme_minimal() + theme(axis.title.x = "Three Year Job Growth (2015-2018)", axis.title.y = "Work One Openings")
?element_text
ggplot(three_counties, aes(x=work_one_openings, y=job_growth)) + geom_point() + theme_minimal() + theme(axis.title.x = element_text("Three Year Job Growth (2015-2018)", axis.title.y = element_text("Work One Openings"))
ggplot(three_counties, aes(x=work_one_openings, y=job_growth)) + geom_point() + theme_minimal() + xlab("Work One Openings") + ylab("Job Growth (2015-2018)")
ggplot(three_counties, aes(x=work_one_openings, y=job_growth)) + geom_point() + theme_minimal() + xlab("Work One Openings") + ylab("Job Growth (2015-2018)")
View(three_counties)
ggplot(three_counties, aes(x=work_one_openings, y=job_growth)) + geom_point() + theme_minimal() + xlab("Work One Openings") + ylab("Job Growth (2015-2018)") + ggtitle(region)
ggplot(three_counties, aes(x=work_one_openings, y=job_growth)) + geom_point() + theme_minimal() + xlab("Work One Openings") + ylab("Job Growth (2015-2018)") + ggtitle(unique(three_counties$region))
ggplot(three_counties, aes(x=work_one_openings, y=job_growth)) + geom_point() + theme_minimal() + xlab("Work One Openings") + ylab("Job Growth (2015-2018)") + ggtitle(unique(three_counties$region)) + geom_text(category, check_overlap = T)
ggplot(three_counties, aes(x=work_one_openings, y=job_growth)) + geom_point() + theme_minimal() + xlab("Work One Openings") + ylab("Job Growth (2015-2018)") + ggtitle(unique(three_counties$region)) + geom_text(three_counties$category, check_overlap = T)
ggplot(three_counties, aes(x=work_one_openings, y=job_growth)) + geom_point() + theme_minimal() + geom_text(category, check_overlap = T) + xlab("Work One Openings") + ylab("Job Growth (2015-2018)") + ggtitle(unique(three_counties$region))
ggplot(three_counties, aes(x=work_one_openings, y=job_growth)) + geom_point() + theme_minimal() + geom_text(aes(label=ifelse(work_one_openings > 0 || job_growth > 0, category, '')), check_overlap = T)+ xlab("Work One Openings") + ylab("Job Growth (2015-2018)") + ggtitle(unique(three_counties$region))
ggplot(three_counties, aes(x=work_one_openings, y=job_growth)) + geom_point() + theme_minimal() + geom_text(aes(label=ifelse(work_one_openings > 0 || job_growth > 1, category, '')), check_overlap = T)+ xlab("Work One Openings") + ylab("Job Growth (2015-2018)") + ggtitle(unique(three_counties$region))
ggplot(three_counties, aes(x=work_one_openings, y=job_growth)) + geom_point() + theme_minimal() + geom_text(aes(label=ifelse(work_one_openings > 0 || job_growth > 0, category, '')), check_overlap = T)+ xlab("Work One Openings") + ylab("Job Growth (2015-2018)") + ggtitle(unique(three_counties$region))
ggplot(three_counties, aes(x=work_one_openings, y=job_growth)) + geom_point() + theme_minimal() + geom_text(aes(label=ifelse(work_one_openings > 0 || job_growth > 0, category, '')))+ xlab("Work One Openings") + ylab("Job Growth (2015-2018)") + ggtitle(unique(three_counties$region))
ggplot(three_counties, aes(x=work_one_openings, y=job_growth)) + geom_point() + theme_minimal() + geom_text(aes(label=category))+ xlab("Work One Openings") + ylab("Job Growth (2015-2018)") + ggtitle(unique(three_counties$region))
?geom_text()
install.packages(ggrepel)
install.packages('ggrepel')
library(ggrepel)
write_csv(three_counties, "three_counties.csv")
st_joe <- analysis_table %>% filter(region == "St. Joseph") %>% select(-county) %>% mutate_if(is.numeric, scale) %>% bind_cols() %>% mutate(score = job_growth + work_one_openings) %>% top_n(30) %>% select(-score)
write_csv(st_joe, "st_joe_county.csv")
elkart <- analysis_table %>% filter(region == "Elkhart") %>% select(-county) %>% mutate_if(is.numeric, scale) %>% bind_cols() %>% mutate(score = job_growth + work_one_openings) %>% top_n(30) %>% select(-score)
write_csv(elkhart, "elkhart_county.csv")
elkhart <- analysis_table %>% filter(region == "Elkhart") %>% select(-county) %>% mutate_if(is.numeric, scale) %>% bind_cols() %>% mutate(score = job_growth + work_one_openings) %>% top_n(30) %>% select(-score)
write_csv(elkhart, "elkhart_county.csv")
source('~/Documents/dataviz-comp/scripts/colleges.R')
names(ddata)
