return(result)
}
tmp <- mapply(get_stockPrice, date_data$ticker, date_data$date)
tmp
# First change Chittenden ticker, which is now CHZ
date_data$ticker[date_data$ticker == 'PBC'] <- 'CHZ'
library(lubridate)
calls <- union_all(mtw_words, pbc_words) %>% mutate(date = ymd(dmy(date))) %>% group_by(ticker, date, quarter) %>% summarize(avg_sentiment = mean(score))
for(x in -5:5){
tmp <- calls$date + x
calls <- cbind.data.frame(calls, tmp)
names(calls)[names(calls) == 'tmp'] <- paste('date',x,sep="_")
}
date_data <- calls %>% select(-date) %>% gather(key="day",value="date", -avg_sentiment, -quarter, -ticker) %>% arrange(ticker, quarter,day)
date_data
rm(calls, tmp)
# First change Chittenden ticker, which is now CHZ
# date_data$ticker[date_data$ticker == 'PBC'] <- 'CHZ'
get_stockPrice <- function(x, y) {
base_url = c('https://api.iextrading.com/1.0')
z = gsub('-','',as.character(y))
extensions = paste("/stock",tolower(x) ,"chart", "date", z, sep = "/")
total <- paste0(base_url, extensions, '/?filter=average')
result <- httr::content(httr::GET(total))
return(result)
}
tmp <- mapply(get_stockPrice, date_data$ticker, date_data$date)
tmp
api_key = c("8FSU1ENAQ7CAFODU")
View(date_data)
View(mtw_freq)
View(manitowoc)
symbols = unique(date_data$ticker)
symbols[1]
myurl = paste0("https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=",symbols[1],"outputsize=full","apikey=",api_key)
httr::GET(myurl)
api_key = "8FSU1ENAQ7CAFODU"
myurl = paste0("https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=",symbols[1],"outputsize=full","apikey=",api_key)
httr::GET(myurl)
myurl = paste0("https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=",symbols[1],"outputsize=full","&apikey=",api_key)
httr::GET(myurl)
api_key = "8FSU1ENAQ7CAFODU"
symbols = unique(date_data$ticker)
myurl = paste0("https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=",symbols[1],"&outputsize=full","&apikey=",api_key)
httr::GET()
httr::GET(myurl)
# First change Chittenden ticker, which is now CHZ
date_data$ticker[date_data$ticker == 'PBC'] <- 'CHZ'
mtwurl = paste0("https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=",symbols[1],"&outputsize=full","&apikey=",api_key)
chzurl = paste0("https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=",symbols[2],"&outputsize=full","&apikey=",api_key)
mtwurl
chzurl
rm(mtwurl)
rm(chzurl)
mtw_timeseries = httr::GET(mtw_url) %>% content(as="text") %>% jsonlite::fromJSON()
# First change Chittenden ticker, which is now CHZ
date_data$ticker[date_data$ticker == 'PBC'] <- 'CHZ'
api_key = "8FSU1ENAQ7CAFODU"
symbols = unique(date_data$ticker)
mtw_url = paste0("https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=",symbols[1],"&outputsize=full","&apikey=",api_key)
chz_url = paste0("https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=",symbols[2],"&outputsize=full","&apikey=",api_key)
mtw_timeseries = httr::GET(mtw_url) %>% content(as="text") %>% jsonlite::fromJSON()
mtw_timeseries = httr::GET(mtw_url) %>% httr::content(as="text") %>% jsonlite::fromJSON()
mtw_timeseries
mtw_timeseries = httr::GET(mtw_url) %>% httr::content(as="parsed") %>% jsonlite::fromJSON()
mtw_timeseries = httr::GET(mtw_url) %>% httr::content(as="text") %>% jsonlite::fromJSON()
# First change Chittenden ticker, which is now CHZ
date_data$ticker[date_data$ticker == 'PBC'] <- 'CHZ'
api_key = "8FSU1ENAQ7CAFODU"
symbols = unique(date_data$ticker)
mtw_url = paste0("https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=",symbols[1],"&outputsize=full","&apikey=",api_key)
chz_url = paste0("https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=",symbols[2],"&outputsize=full","&apikey=",api_key)
mtw_timeseries <- httr::GET(mtw_url) %>% httr::content(as="text") %>% jsonlite::fromJSON()
chz_timeseries <- httr::GET(chz_url) %>% httr::content(as="text") %>% json::fromJSON()
chz_timeseries <- httr::GET(chz_url) %>% httr::content(as="text") %>% jsonlite::fromJSON()
mtw_timeseries[[1]]
mtw_timeseries[[2]]
mtw_timeseries[[1]]
mtw_timeseries[[2]] %>% length()
mtw_timeseries[[2]][[1]] %>% length()
View(date_data)
mtw_timeseries[[2]][['2005-07-27']]
mtw_timeseries[[2]][['2005-07-27']][[4]]
mtw_data <- date_data %>% filter(ticker = 'MTW') %>% mutate(close_price = mtw_timeseries[[2]][[date]][[4]])
mtw_data <- date_data %>% filter(ticker == 'MTW') %>% mutate(close_price = mtw_timeseries[[2]][[date]][[4]])
mtw_data <- date_data %>% filter(ticker == 'MTW') %>% mutate(close_price = mtw_timeseries[[2]][[.$date]][[4]])
str(date_data)
mtw_data$close_price <- mtw_timeseries[[2]][[as.character(mtw_data$date)]][[4]]
mtw_data <- date_data %>% filter(ticker == 'MTW')
mtw_data$close_price <- mtw_timeseries[[2]][[as.character(mtw_data$date)]][[4]]
str(mtw_data)
?map2()
mtw_data$close_price <- vapply(mtw_data$date, function(x){
z = as.character(x)
return(mtw_timeseries[[2]][[x]][[4]])
})
mtw_data$close_price <- apply(mtw_data$date, function(x){
z = as.character(x)
return(mtw_timeseries[[2]][[x]][[4]])
})
mtw_data$close_price <- lapply(mtw_data$date, function(x){
z = as.character(x)
return(mtw_timeseries[[2]][[x]][[4]])
})
mtw_data$close_price <- vapply(mtw_data$date, function(x){
z = as.character(x)
return(mtw_timeseries[[2]][[x]][[4]])
}, numeric(2))
mtw_data$close_price <- vapply(mtw_data$date, function(x){
z = paste("'",as.character(x),"'")
return(mtw_timeseries[[2]][[x]][[4]])
}, numeric(2))
mtw_data$close_price <- vapply(mtw_data$date, function(x){
z = paste("'",as.character(x),"'")
print(x)
return(mtw_timeseries[[2]][[x]][[4]])
}, numeric(2))
mtw_data$close_price <- vapply(mtw_data$date, function(x){
z = as.character(x)
print(z)
return(mtw_timeseries[[2]][[x]][[4]])
}, numeric(2))
mtw_data$close_price <- vapply(mtw_data$date, function(x){
z = paste("'",as.character(x),"'")
print(z)
return(mtw_timeseries[[2]][[z]][[4]])
}, numeric(2))
mtw_data$close_price <- vapply(mtw_data$date, function(x){
z = paste0("'",as.character(x),"'")
print(z)
return(mtw_timeseries[[2]][[z]][[4]])
}, numeric(2))
mtw_data$close_price <- map(date_data$date, function(x){  z <- as.character(x)
return(mtw_timeseries[[2]][[z]][[4]])})
mtw_data <- date_data %>% filter(ticker == 'MTW')
View(mtw_data)
mtw_data$close_price <- map(date_data$date, function(x){
y = as.character(x)
z = mtw_timeseries[[2]][[y]][[4]]
print(z)
return(z)
})
close_price <- map(date_data$date, function(x){
y = as.character(x)
z = mtw_timeseries[[2]][[y]][[4]]
print(z)
return(z)
})
mtw_data$close_price <- map(mtw_data$date, function(x){
y = as.character(x)
z = mtw_timeseries[[2]][[y]][[4]]
print(z)
return(z)
})
mtw_timeseries[[2]][['2005-07-24']]
head(chz_timeseries[[2]])
# Inspect a sample of the data
chz_timeseries[[2]][[1]]
# Inspect a sample of the data
chz_timeseries[[2]][['2005-07-28']]
chz_data$close_price <- map(chz_data$date, function(x){
y = as.character(x)
z = chz_timeseries[[2]][[y]][[4]]
})
chz_data <- date_data %>% filter(ticker == "CHZ")
chz_data$close_price <- map(chz_data$date, function(x){
y = as.character(x)
z = chz_timeseries[[2]][[y]][[4]]
})
View(chz_data)
mtw_timeseries[[2]][['2005-07-24']]
mtw_data <- date_data %>% filter(ticker == 'MTW')
chz_data <- date_data %>% filter(ticker == "CHZ")
mtw_data$close_price <- map(mtw_data$date, function(x){
y = as.character(x)
z = mtw_timeseries[[2]][[y]][[4]]
return(as.numeric(z))
})
chz_data$close_price <- map(chz_data$date, function(x){
y = as.character(x)
z = chz_timeseries[[2]][[y]][[4]]
})
# recombine
date_data <- rbind.data.frame(mtw_data, chz_data)
# get rid of the rest of the historical data
rm(chz_timeseries, mtw_timeseries)
head(date_data)
mtw_timeseries[[2]][['2005-07-24']]
# First change Chittenden ticker, which was CHZ
date_data$ticker[date_data$ticker == 'PBC'] <- 'CHZ'
api_key = "8FSU1ENAQ7CAFODU"
symbols = unique(date_data$ticker)
mtw_url = paste0("https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=",symbols[1],"&outputsize=full","&apikey=",api_key)
chz_url = paste0("https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=",symbols[2],"&outputsize=full","&apikey=",api_key)
mtw_timeseries <- httr::GET(mtw_url) %>% httr::content(as="text") %>% jsonlite::fromJSON()
chz_timeseries <- httr::GET(chz_url) %>% httr::content(as="text") %>% jsonlite::fromJSON()
# Inspect a sample of the data
chz_timeseries[[2]][['2005-07-28']]
# First change Chittenden ticker, which was CHZ
date_data$ticker[date_data$ticker == 'PBC'] <- 'CHZ'
api_key = "8FSU1ENAQ7CAFODU"
symbols = unique(date_data$ticker)
mtw_url = paste0("https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=",symbols[1],"&outputsize=full","&apikey=",api_key)
chz_url = paste0("https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=",symbols[2],"&outputsize=full","&apikey=",api_key)
mtw_timeseries <- httr::GET(mtw_url) %>% httr::content(as="text") %>% jsonlite::fromJSON()
chz_timeseries <- httr::GET(chz_url) %>% httr::content(as="text") %>% jsonlite::fromJSON()
# Inspect a sample of the data
chz_timeseries[[2]][['2005-07-28']]
mtw_timeseries[[2]][['2005-07-24']]
mtw_data <- date_data %>% filter(ticker == 'MTW')
chz_data <- date_data %>% filter(ticker == "CHZ")
mtw_data$close_price <- map(mtw_data$date, function(x){
y = as.character(x)
z = mtw_timeseries[[2]][[y]][[4]]
return(as.numeric(z))
})
chz_data$close_price <- map(chz_data$date, function(x){
y = as.character(x)
z = chz_timeseries[[2]][[y]][[4]]
return(as.numeric(z))
})
# recombine
date_data <- rbind.data.frame(mtw_data, chz_data)
# get rid of the rest of the historical data
#rm(chz_timeseries, mtw_timeseries)
head(date_data)
View(data_data)
View(date_data)
mtw_timeseries[[2]][['2005-07-24']]
mtw_data <- date_data %>% filter(ticker == 'MTW')
chz_data <- date_data %>% filter(ticker == "CHZ")
mtw_data$close_price <- map(mtw_data$date, function(x){
y = as.character(x)
z = mtw_timeseries[[2]][[y]][[4]]
return(as.integer(z))
})
chz_data$close_price <- map(chz_data$date, function(x){
y = as.character(x)
z = chz_timeseries[[2]][[y]][[4]]
return(as.integer(z))
})
# recombine
date_data <- rbind.data.frame(mtw_data, chz_data)
# get rid of the rest of the historical data
#rm(chz_timeseries, mtw_timeseries)
head(date_data)
View(date_data)
?as.numeric()
?as.numeric
chz_data$close_price <- map(chz_data$date, function(x){
y = as.character(x)
z = chz_timeseries[[2]][[y]][[4]]
print(z)
return(as.numeric(z))
})
chz_data$close_price <- map(chz_data$date, function(x){
y = as.character(x)
z = chz_timeseries[[2]][[y]][[4]]
print(z)
if(!is.null(z)){ return(as.numeric(z))}
else{ return(NA)}
})
chz_data$close_price <- map(chz_data$date, function(x){
y = as.character(x)
z = chz_timeseries[[2]][[y]][[4]]
if(!is.null(z)){ return(as.numeric(z))}
else{ return(NA)}
})
chz_data$close_price
mtw_timeseries[[2]][['2005-07-24']]
mtw_data <- date_data %>% filter(ticker == 'MTW')
chz_data <- date_data %>% filter(ticker == "CHZ")
mtw_data$close_price <- map(mtw_data$date, function(x){
y = as.character(x)
z = mtw_timeseries[[2]][[y]][[4]]
if(!is.null(z)){ return(as.numeric(z))}
else{ return(NA)}
})
chz_data$close_price <- map(chz_data$date, function(x){
y = as.character(x)
z = chz_timeseries[[2]][[y]][[4]]
if(!is.null(z)){ return(as.numeric(z))}
else{ return(NA)}
})
# recombine
date_data <- rbind.data.frame(mtw_data, chz_data)
# get rid of the rest of the historical data
#rm(chz_timeseries, mtw_timeseries)
head(date_data)
View(date_data)
mtw_timeseries[[2]][['2005-07-24']]
mtw_data <- date_data %>% filter(ticker == 'MTW')
chz_data <- date_data %>% filter(ticker == "CHZ")
mtw_data$close_price <- map(mtw_data$date, function(x){
y = as.character(x)
z = mtw_timeseries[[2]][[y]][[4]]
if(!is.null(z)){ return(as.numeric(z))}
else{ return(NA)}
})
chz_data$close_price <- map(chz_data$date, function(x){
y = as.character(x)
z = chz_timeseries[[2]][[y]][[4]]
if(!is.null(z)){ return(as.numeric(z))}
else{ return(NA)}
})
# recombine
date_data <- rbind.data.frame(mtw_data, chz_data)
# get rid of the rest of the historical data
#rm(chz_timeseries, mtw_timeseries)
View(date_data)
mtw_timeseries[[2]][['2005-07-24']]
mtw_data <- date_data %>% filter(ticker == 'MTW')
chz_data <- date_data %>% filter(ticker == "CHZ")
mtw_data$close_price <- map(mtw_data$date, function(x){
y = as.character(x)
z = mtw_timeseries[[2]][[y]][[4]]
if(!is.null(z)){ return(as.numeric(z))}
else{ return(NA)}
})
chz_data$close_price <- map(chz_data$date, function(x){
y = as.character(x)
z = chz_timeseries[[2]][[y]][[4]]
if(!is.null(z)){ return(as.numeric(z))}
else{ return(NA)}
})
# recombine
date_data <- rbind.data.frame(mtw_data, chz_data)
# get rid of the rest of the historical data
#rm(chz_timeseries, mtw_timeseries)
date_data %>% rmarkdown::paged_table()
# recombine
date_data <- bind_rows(mtw_data, chz_data)
date_data %>% rmarkdown::paged_table()
# recombine
date_data <- bind_rows(mtw_data, chz_data) %>% mutate(close_price = as.numeric(close_price))
date_data %>% rmarkdown::paged_table()
date_data %>% head()
mtw_timeseries[[2]][['2005-07-24']]
mtw_data <- date_data %>% filter(ticker == 'MTW')
chz_data <- date_data %>% filter(ticker == "CHZ")
mtw_data$close_price <- map(mtw_data$date, function(x){
y = as.character(x)
z = mtw_timeseries[[2]][[y]][[4]]
if(!is.null(z)){ return(as.numeric(z))}
else{ return(NA)}
})
chz_data$close_price <- map(chz_data$date, function(x){
y = as.character(x)
z = chz_timeseries[[2]][[y]][[4]]
if(!is.null(z)){ return(as.numeric(z))}
else{ return(NA)}
})
# recombine
date_data <- bind_rows(mtw_data, chz_data) %>% mutate(close_price = as.numeric(close_price))
# get rid of the rest of the historical data
rm(chz_timeseries, mtw_timeseries)
date_data %>% head()
# First change Chittenden ticker, which was CHZ
date_data$ticker[date_data$ticker == 'PBC'] <- 'CHZ'
api_key = "8FSU1ENAQ7CAFODU"
symbols = unique(date_data$ticker)
mtw_url = paste0("https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=",symbols[1],"&outputsize=full","&apikey=",api_key)
chz_url = paste0("https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=",symbols[2],"&outputsize=full","&apikey=",api_key)
mtw_timeseries <- httr::GET(mtw_url) %>% httr::content(as="text") %>% jsonlite::fromJSON()
chz_timeseries <- httr::GET(chz_url) %>% httr::content(as="text") %>% jsonlite::fromJSON()
# Inspect a sample of the data
chz_timeseries[[2]][['2005-07-28']]
mtw_timeseries[[2]][['2005-07-24']]
mtw_data <- date_data %>% filter(ticker == 'MTW')
chz_data <- date_data %>% filter(ticker == "CHZ")
mtw_data$close_price <- map(mtw_data$date, function(x){
y = as.character(x)
z = mtw_timeseries[[2]][[y]][[4]]
if(!is.null(z)){ return(as.numeric(z))}
else{ return(NA)}
})
chz_data$close_price <- map(chz_data$date, function(x){
y = as.character(x)
z = chz_timeseries[[2]][[y]][[4]]
if(!is.null(z)){ return(as.numeric(z))}
else{ return(NA)}
})
# recombine
date_data <- bind_rows(mtw_data, chz_data) %>% mutate(close_price = as.numeric(close_price))
# get rid of the rest of the historical data
#rm(chz_timeseries, mtw_timeseries)
date_data %>% head()
mtw_data <- date_data %>% filter(ticker == 'MTW')
chz_data <- date_data %>% filter(ticker == "CHZ")
mtw_data$close_price <- map(mtw_data$date, function(x){
y = as.character(x)
z = mtw_timeseries[[2]][[y]][['close']]
if(!is.null(z)){ return(as.numeric(z))}
else{ return(NA)}
})
chz_data$close_price <- map(chz_data$date, function(x){
y = as.character(x)
z = chz_timeseries[[2]][[y]][['close']]
if(!is.null(z)){ return(as.numeric(z))}
else{ return(NA)}
})
# recombine
date_data <- bind_rows(mtw_data, chz_data) %>% mutate(close_price = as.numeric(close_price))
# get rid of the rest of the historical data
#rm(chz_timeseries, mtw_timeseries)
date_data %>% head()
mtw_data <- date_data %>% filter(ticker == 'MTW')
chz_data <- date_data %>% filter(ticker == "CHZ")
mtw_data$close_price <- map(mtw_data$date, function(x){
y = as.character(x)
z = mtw_timeseries[[2]][[y]][[4]]
if(!is.null(z)){ return(as.numeric(z))}
else{ return(NA)}
})
chz_data$close_price <- map(chz_data$date, function(x){
y = as.character(x)
z = chz_timeseries[[2]][[y]][[4]]
if(!is.null(z)){ return(as.numeric(z))}
else{ return(NA)}
})
# recombine
date_data <- bind_rows(mtw_data, chz_data) %>% mutate(close_price = as.numeric(close_price))
# get rid of the rest of the historical data
#rm(chz_timeseries, mtw_timeseries)
date_data %>% head()
combined <- inner_join(pbc_freq, mtw_freq, by="word")
names(combined)[2:3] <- c('pbc_freq', 'mtw_freq')
combined %>% head()
pbc_freq <- pbc_words %>% count(word, sort=T)
pbc_freq %>% head()
mtw_freq <- mtw_words %>% count(word, sort=T)
mtw_freq %>% rmarkdown::paged_table()
pbc_freq <- pbc_words %>% count(word, sort=T)
pbc_freq %>% rmarkdown::paged_table()
View(date_data)
?geom_line()
ggplot(date_data, aes(y=close_price, x=day)) + geom_point(aes(fill=avg_sentiment)) + facet_wrap(vars(ticker, quarter)) + theme_light()
ggplot(date_data, aes(y=close_price, x=day)) + geom_path(aes(fill=avg_sentiment)) + facet_wrap(vars(ticker, quarter)) + theme_light()
ggplot(date_data, aes(y=close_price, x=day)) + geom_line(aes(fill=avg_sentiment)) + facet_wrap(vars(ticker, quarter)) + theme_light()
ggplot(date_data, aes(y=close_price, x=day)) + geom_point(aes(fill=avg_sentiment)) + facet_wrap(vars(ticker, quarter)) + theme_light()
ggplot(chz_data, aes(y=close_price, x=day)) + geom_point(aes(fill=avg_sentiment)) + facet_wrap(vars( quarter)) + theme_light()
ggplot(chz_data, aes(y=close_price, x=day)) + geom_point(aes(fill=avg_sentiment)) + facet_wrap(vars(ticker, quarter)) + theme_light()
ggplot(date_data, aes(y=close_price, x=day)) + geom_point(aes(fill=avg_sentiment)) + facet_wrap(vars( quarter)) + theme_light()
date_data %>% filter(ticker == 'CHZ') %>% ggplot(., aes(y=close_price, x=day)) + geom_point(aes(fill=avg_sentiment)) + facet_wrap(vars(quarter)) + theme_light()
date_data %>% filter(ticker == 'CHZ') %>% ggplot(., aes(y=close_price, x=day)) + geom_point(aes(fill=avg_sentiment)) + facet_wrap(vars(quarter)) + theme_light() + labs(x="")
date_data %>% filter(ticker == 'CHZ') %>% ggplot(., aes(y=close_price, x=day)) + geom_point(aes(fill=avg_sentiment)) + facet_wrap(vars(quarter)) + theme_light() + labs(x="")
date_data %>% filter(ticker == 'CHZ') %>% ggplot(., aes(y=close_price, x=day)) + geom_point(aes(fill=avg_sentiment)) + facet_wrap(vars(quarter)) + theme_light() + labs(x="")
?labs()
date_data %>% filter(ticker == 'CHZ') %>% ggplot(., aes(y=close_price, x=day)) + geom_point(aes(fill=avg_sentiment)) + facet_wrap(vars(quarter)) + theme_light(axis.x.tickers="") + labs(x="")
date_data %>% filter(ticker == 'CHZ') %>% ggplot(., aes(y=close_price, x=day)) + geom_point(aes(fill=avg_sentiment)) + facet_wrap(vars(quarter)) + theme_light(axis.x.ticker="") + labs(x="")
date_data %>% filter(ticker == 'CHZ') %>% ggplot(., aes(y=close_price, x=day)) + geom_point(aes(fill=avg_sentiment)) + facet_wrap(vars(quarter)) + theme_light() + labs(x="")
date_data %>% filter(ticker == 'CHZ') %>% ggplot(., aes(y=close_price, x=day)) + geom_point(aes(x=avg_sentiment)) + facet_wrap(vars(quarter)) + theme_light() + labs(x="")
date_data %>% filter(ticker == 'CHZ') %>% ggplot(., aes(y=close_price, x=day)) + geom_point() + facet_wrap(vars(quarter)) + theme_light() + labs(x="")
date_data %>% filter(ticker == 'CHZ') %>% ggplot(., aes(y=close_price, x=day)) + geom_point() + facet_wrap(vars(quarter)) + theme_light() + labs(x="", title="CHZ Stock Price Around Earnings Calls")
date_data %>% filter(ticker == 'MWC') %>% ggplot(., aes(y=close_price, x=day)) + geom_point() + facet_wrap(vars(quarter)) + theme_light() + labs(x="", title="MWC Stock Price Around Earnings Calls")
View(date_data)
date_data %>% filter(ticker == 'CHZ') %>% ggplot(., aes(y=close_price, x=day)) + geom_point() + facet_wrap(vars(quarter)) + theme_light() + labs(x="", title="CHZ Stock Price Around Earnings Calls")
date_data %>% filter(ticker == 'CHZ') %>% ggplot(., aes(y=close_price, x=day)) + geom_point() + facet_wrap(vars(quarter)) + theme_light(axis.ticks.x = element_blank()) + labs(x="", title="CHZ Stock Price Around Earnings Calls")
date_data %>% filter(ticker == 'CHZ') %>% ggplot(., aes(y=close_price, x=day)) + geom_point() + facet_wrap(vars(quarter)) + theme_light(axis.ticks.x = element_text(element_blank())) + labs(x="", title="CHZ Stock Price Around Earnings Calls")
date_data %>% filter(ticker == 'CHZ') %>% ggplot(., aes(y=close_price, x=day)) + geom_point() + facet_wrap(vars(quarter)) + theme_light(axis.ticks.x = element_text(element_blank) + labs(x="", title="CHZ Stock Price Around Earnings Calls")
date_data %>% filter(ticker == 'CHZ') %>% ggplot(., aes(y=close_price, x=day)) + geom_point() + facet_wrap(vars(quarter)) + theme_light(axis.ticks.x = element_blank()) + labs(x="", title="CHZ Stock Price Around Earnings Calls")
date_data %>% filter(ticker == 'CHZ') %>% ggplot(., aes(y=close_price, x=day)) + geom_point() + facet_wrap(vars(quarter)) + theme_light(axis.ticks = element_blank()) + labs(x="", title="CHZ Stock Price Around Earnings Calls")
date_data %>% filter(ticker == 'CHZ') %>% ggplot(., aes(y=close_price, x=day)) + geom_point() + facet_wrap(vars(quarter)) + theme_light(axis.ticks.x=element_blank()) + labs(x="", title="CHZ Stock Price Around Earnings Calls")
date_data %>% filter(ticker == 'CHZ') %>% ggplot(., aes(y=close_price, x=day)) + geom_point() + facet_wrap(vars(quarter)) + theme(axis.ticks.x=element_blank()) + labs(x="", title="CHZ Stock Price Around Earnings Calls") + theme_light()
date_data %>% filter(ticker == 'CHZ') %>% ggplot(., aes(y=close_price, x=day)) + geom_point() + facet_wrap(vars(quarter)) + theme_light() + labs(x="", title="CHZ Stock Price Around Earnings Calls") + theme(axis.ticks.x=element_blank())
date_data %>% filter(ticker == 'CHZ') %>% ggplot(., aes(y=close_price, x=day)) + geom_point() + facet_wrap(vars(quarter)) + theme_light() + labs(x="", title="CHZ Stock Price Around Earnings Calls") + theme_update(axis.ticks.x=element_blank())
date_data %>% filter(ticker == 'CHZ') %>% ggplot(., aes(y=close_price, x=day)) + geom_point() + facet_wrap(vars(quarter)) + theme_light() %+replace% theme(axis.ticks.x=element_blank()) + labs(x="", title="CHZ Stock Price Around Earnings Calls") +
date_data %>% filter(ticker == 'CHZ') %>% ggplot(., aes(y=close_price, x=day)) + geom_point() + facet_wrap(vars(quarter)) + labs(x="", title="CHZ Stock Price Around Earnings Calls") + theme_light() %+replace% theme(axis.ticks.x=element_blank()) +
date_data %>% filter(ticker == 'CHZ') %>% ggplot(., aes(y=close_price, x=day)) + geom_point() + facet_wrap(vars(quarter)) + labs(x="", title="CHZ Stock Price Around Earnings Calls") + theme_light()
date_data %>% filter(ticker == 'CHZ') %>% ggplot(., aes(y=close_price, x=date)) + geom_point() + facet_wrap(vars(quarter)) + labs(x="", title="CHZ Stock Price Around Earnings Calls") + theme_light()
date_data %>% filter(ticker == 'CHZ') %>% ggplot(., aes(y=close_price, x=day)) + geom_point() + facet_wrap(vars(quarter)) + labs(x="", title="CHZ Stock Price Around Earnings Calls") + theme_light()
chz_data$avg_sentiment[chz_data$quarter == 'Q3']
unique(chz_data$avg_sentiment[chz_data$quarter == 'Q3'])
date_data %>% filter(ticker == 'CHZ') %>% ggplot(., aes(y=close_price, x=day)) + geom_point() + facet_wrap(vars(quarter)) + labs(x="", title="CHZ Stock Price Around Earnings Calls") + theme_light()
library(ggthemes)
library(ggthemes)
date_data %>% filter(ticker == 'CHZ') %>% ggplot(., aes(y=close_price, x=day)) + geom_point() + facet_wrap(vars(quarter)) + labs(x="", title="CHZ Stock Price Around Earnings Calls") + theme_minimal()
date_data %>% filter(ticker == 'CHZ') %>% ggplot(., aes(y=close_price, x=day)) + geom_point() + facet_wrap(vars(quarter)) + labs(x="", title="CHZ Stock Price Around Earnings Calls") + theme_light()
date_data %>% filter(ticker == 'CHZ') %>% ggplot(., aes(y=close_price, x=day)) + geom_point() + facet_grid(quarter ~ avg_sentiment)) + labs(x="", title="CHZ Stock Price Around Earnings Calls") + theme_light()
date_data %>% filter(ticker == 'CHZ') %>% ggplot(., aes(y=close_price, x=day)) + geom_point() + facet_grid(quarter ~ avg_sentiment) + labs(x="", title="CHZ Stock Price Around Earnings Calls") + theme_light()
date_data %>% filter(ticker == 'CHZ') %>% ggplot(., aes(y=close_price, x=day)) + geom_point() + facet_grid(vars(quarter)) + labs(x="", title="CHZ Stock Price Around Earnings Calls") + theme_light()
date_data %>% filter(ticker == 'CHZ') %>% ggplot(., aes(y=close_price, x=day)) + geom_point() + facet_wrap(vars(quarter)) + labs(x="", title="CHZ Stock Price Around Earnings Calls") + theme_light()
date_data %>% filter(ticker == 'CHZ') %>% ggplot(., aes(y=close_price, x=day)) + geom_point() + facet_wrap(vars(quarter)) + labs(x="", title="CHZ Stock Price Around Earnings Calls") + theme_light()
+ theme_update(axis.ticks.x = element_blank())
date_data %>% filter(ticker == 'CHZ') %>% ggplot(., aes(y=close_price, x=day)) + geom_point() + facet_wrap(vars(quarter)) + labs(x="", title="CHZ Stock Price Around Earnings Calls") + theme_light() + theme_update(axis.ticks.x = element_blank())
date_data %>% filter(ticker == 'CHZ') %>% ggplot(., aes(y=close_price, x=day)) + geom_point() + facet_wrap(vars(quarter)) + labs(x="", title="CHZ Stock Price Around Earnings Calls") + theme_light() + theme_replace(axis.ticks.x = element_blank())
date_data %>% filter(ticker == 'CHZ') %>% ggplot(., aes(y=close_price, x=day)) + geom_point() + facet_wrap(vars(quarter)) + labs(x="", title="CHZ Stock Price Around Earnings Calls") + theme_light() + theme_set(axis.ticks.x = element_blank())
date_data %>% filter(ticker == 'CHZ') %>% ggplot(., aes(y=close_price, x=day)) + geom_point() + facet_wrap(vars(quarter)) + labs(x="", title="CHZ Stock Price Around Earnings Calls") + theme_light() + theme(axis.ticks.x = element_blank())
date_data %>% filter(ticker == 'CHZ') %>% ggplot(., aes(y=close_price, x=day)) + geom_point() + facet_wrap(vars(quarter)) + labs(x="", title="CHZ Stock Price Around Earnings Calls") +
theme_light() %+replace% theme(axis.ticks.x = element_blank())
date_data %>% filter(ticker == 'CHZ') %>% mutate(day = gsub('date_','' day) %>% ggplot(., aes(y=close_price, x=day)) + geom_point() + facet_wrap(vars(quarter)) + labs(x="", title="CHZ Stock Price Around Earnings Calls") +
date_data %>% filter(ticker == 'CHZ') %>% mutate(day = gsub('date_','', day)) %>% ggplot(., aes(y=close_price, x=day)) + geom_point() + facet_wrap(vars(quarter)) + labs(x="", title="CHZ Stock Price Around Earnings Calls") +
theme_light()
unique(mtw_data$avg_sentiment[ctw_data$quarter == 'Q2'])
unique(mtw_data$avg_sentiment[mtw_data$quarter == 'Q2'])
unique(mtw_data$avg_sentiment[mtw_data$quarter == 'Q3'])
date_data %>% filter(ticker == 'MTW') %>% mutate(day = gsub('date_','', day)) %>% ggplot(., aes(y=close_price, x=day)) + geom_point() + facet_wrap(vars(quarter)) + labs(x="Day", title="MTW Stock Price Around Earnings Calls") + theme_light()
?map
?purr::map
library(purrr)
?map
getwd()
setwd("/Users/jackcondon/Documents/dataviz-comp")
getwd()
setwd("/Users/jackcondon/Documents/dataviz-comp/scripts")
source('~/Documents/dataviz-comp/scripts/colleges.R')
source('~/Documents/dataviz-comp/scripts/colleges.R')
getwd()
ddata <- read.csv('/Users/jackcondon/Documents/dataviz-comp/data/ipeds_data.csv')
source('~/Documents/dataviz-comp/scripts/colleges.R')
View(ndata)
unique(ndata$geographic.region)
